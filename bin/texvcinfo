#!/usr/bin/env node

var program = require('commander');

var json = require('../package.json');

program
    .version(json.version)
    .usage('[options] <tex input>')
    .option('-v, --verbose', 'Show verbose error information')
    .option('-t, --tree', 'Shows the whole tree.')
    .option('-D, --debug', 'Show stack trace on failure.')
    .option('-c, --compact', 'Do not pretty print output.')
    .option('-j, --json', 'Outputs d3 json format.')
    .option('-f, --flat', 'Flattens the tree for elements with only one child')
    .option('-i, --identifier', 'Outputs a list of identifers')
    .option('-a, --all', 'Returns and array with all information.');


program.parse(process.argv);

var input = program.args.join(' ');

var tokens = require('../');

var format = "list";
if ( program.tree ){
    format = "tree";
}
if ( program.json ){
    format = "json";
}
if (program.identifier){
    format = "identifier";
}
if (program.all){
    format = "all";
}
var result = tokens.tokens(input, {debug: program.debug, format: format, flatTree:program.flat});

// output result
if (result.status === undefined) {
    if ( program.compact) {
        console.log(JSON.stringify(result));
    } else {
        console.log(JSON.stringify(result, null, 2));
    }
} else if (result.status === 'F' || program.verbose) {
    console.log(result.status + (result.details || ''));
} else {
    console.log(result.status+ (result.details || ''));
}
process.exit(result.status === undefined ? 0 : 1);
